{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","toUpperCase","showAlert","toLowerCase","newText","i","length","charAt","document","getElementById","select","navigator","clipboard","writeText","split","join","Alert","word","alert","slice","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0a38314d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\nexport default function Navbar(props) {\n    return (\n        <>\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n                            </li>\n                            {/* <li className=\"nav-item\">\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                            </li> */}\n                        </ul>\n                        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\n                        </div>\n                        {/* <form className=\"d-flex\">\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                        </form> */}\n                    </div>\n                </div>\n            </nav>\n        </>\n    )\n}\n\nNavbar.propTypes = { title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired }\nNavbar.defaultProps = { title: \"Set title here\", aboutText: \"About text here\" }\n","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const [text, setText] = useState('');\n\n    const handleUpClick = () => {\n        console.log(\"button was clicked\")\n        setText(text.toUpperCase())\n        props.showAlert('warning','Upclick was clicked')\n    }\n\n    const handleOnChange = (event) => {\n        console.log(\"On change\");\n        setText(event.target.value);\n    }\n\n    const handleDownClick = () => {\n        setText(text.toLowerCase())\n        props.showAlert('warning', 'Downclick was clicked')\n    }\n\n    const handleClearText = () => {\n        setText('');\n        props.showAlert('success', 'Text Has been cleared')\n    }\n\n    const handleReverse = () => {\n        let newText = '';\n        for(var i = text.length - 1; i >= 0; i--){\n            newText += text.charAt(i);\n        }\n        setText(newText)\n        props.showAlert('success', 'String was reversed')\n\n    }\n\n    const handleCopy = () => {\n        var text = document.getElementById(\"myBox\");\n        text.select();\n        navigator.clipboard.writeText(text.value);\n        props.showAlert('success', 'Text has been copied')\n\n    }\n\n    const handleExtraSpace = () =>{\n        let newText = text.split(/[ ]+/);\n        setText(newText.join(\" \"));\n        props.showAlert('success', 'Extra spaces have been removed')\n    }\n    return (\n        <>\n        <div className='container' style = {{color : props.mode === 'dark' ? 'white' : 'black'}}>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                {/* <label for=\"myBox\" className=\"form-label\">Example textarea</label> */}\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor : props.mode === 'dark' ? 'grey' : 'white', color : props.mode === 'dark' ? 'white':'black'}}></textarea>\n            </div>\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to Lowercase</button>\n            <button className=\"btn btn-primary\" onClick={handleReverse}>Reverse</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearText}>Clear Text</button>\n            <button className=\"btn btn-primary\" onClick={handleCopy}>Copy Text</button>\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>Remove Extra Space</button>\n            \n        </div>\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n            <h2>Your text summary</h2>\n            <p>{text.split(' ').length} words and {text.length} characters</p>\n            <p>Your text can be read in  {0.008 * text.split(' ').length}</p>\n            <h2>Preview : </h2>\n            <p>{text.length > 0 ? text : 'Enter some text in the box aboove to preview'}</p>\n        </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word) => {\n        let text = word.toLowerCase();\n        return text.charAt(0).toUpperCase() + word.slice(1); \n\n    }\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)} ! </strong>{props.alert.msg}\n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (type, message) => {\n    setAlert({ type: type, msg: message })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#042743';\n      showAlert('success', 'Dark Mode has been enabled')\n      document.title = 'TextUtils - Dark Mode'\n    }\n\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('success', 'Light Mode has been enabled')\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils2\" aboutText=\"About Text Utils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <About/> */}\n        {/* <Switch> */}\n          {/* /users -> Component 1 */}\n          {/* /users/home -> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route>\n        \n          <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} />\n          {/* </Route>\n        </Switch> */}\n\n        {/* <TextForm heading=\"Enter the text to analyze\" mode={mode} showAlert={showAlert} /> */}\n\n\n      </div>\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}